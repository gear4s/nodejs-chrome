---

name: build-one
on:
  push:
    branches:
      - main
  schedule:
    - cron: '25 4 * * 4'

env:
  IMAGE_REPOSITORY: nodejs-chrome

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx with docker driver
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
          tags: type=raw,value=latest
          labels: |
            org.opencontainers.image.documentation=https://github.com/gear4s/nodejs-chrome
            org.opencontainers.image.vendor=gear4s

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          load: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: aquelle1/${{ env.IMAGE_REPOSITORY }}:latest

      - name: Test
        env:
          IMAGE_NAME: aquelle1/${{ env.IMAGE_REPOSITORY }}:latest
        run: |
          ./test.sh

      - name: Export image artifact
        run: |
          docker image save aquelle1/${{ env.IMAGE_REPOSITORY }}:latest | gzip > ${{ env.IMAGE_REPOSITORY }}-latest.tar.gz

      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.IMAGE_REPOSITORY }}-latest
          path: ${{ env.IMAGE_REPOSITORY }}-latest.tar.gz
          retention-days: 1

      - name: Compute versioned tag
        id: tag
        env:
          IMAGE_NAME: aquelle1/${{ env.IMAGE_REPOSITORY }}:latest
          CHROMIUM_VERSION_REGEXP: 'Chromium ([0-9]+)\.'
          CHROMEDRIVER_VERSION_REGEXP: 'ChromeDriver ([0-9]+)\.'
        run: |
          CURRENT_CHROMIUM_VERSION=$(docker container run --rm --entrypoint '' ${IMAGE_NAME} chromium-browser --version)
          if [[ ${CURRENT_CHROMIUM_VERSION} =~ ${CHROMIUM_VERSION_REGEXP} ]]; then
            echo "ℹ Successfully extracted Chromium major version of ${BASH_REMATCH[1]} from '${CURRENT_CHROMIUM_VERSION}'"
          else
            echo "❌ Cannot extract Chromium major version from '${CURRENT_CHROMIUM_VERSION}'" >&2
            exit 1
          fi
          CHROMIUM_VERSION=${BASH_REMATCH[1]}
          TAG=${CHROMIUM_VERSION}
          echo "value=${TAG}" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx with docker-container driver
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Build and push
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          IMAGE_NAME: ${{ env.IMAGE_REPOSITORY }}:latest
          IMAGE_VERSIONED_NAME: ${{ env.IMAGE_REPOSITORY }}:20-${{ steps.tag.outputs.value }}
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            aquelle1/${{ env.IMAGE_NAME }}
            aquelle1/${{ env.IMAGE_VERSIONED_NAME }}
          push: true
